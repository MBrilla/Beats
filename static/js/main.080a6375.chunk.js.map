{"version":3,"sources":["api/youtube.js","components/VideoList.js","App.js","index.js"],"names":["API_KEY","process","VideoList","videos","setVideos","useState","error","setError","decodeHtmlEntities","text","textarea","document","createElement","innerHTML","value","useEffect","async","fetchedVideos","response","axios","get","params","part","channelId","maxResults","type","key","order","console","log","data","items","fetchVideos","err","message","loadVideos","_jsxs","className","children","_jsx","length","map","video","width","height","src","id","videoId","title","snippet","frameBorder","allow","allowFullScreen","App","href","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"2LAEA,MAAMA,EAAUC,0C,WCyDDC,MAxDf,WACE,MAAOC,EAAQC,GAAaC,mBAAS,KAC9BC,EAAOC,GAAYF,mBAAS,MAE7BG,EAAsBC,IAC1B,MAAMC,EAAWC,SAASC,cAAc,YAExC,OADAF,EAASG,UAAYJ,EACdC,EAASI,KAAK,EAgBvB,OAbAC,qBAAU,KACWC,WACjB,IACE,MAAMC,ODXaD,WAIzB,MAAME,QAAiBC,IAAMC,IAAI,+CAAgD,CAC/EC,OAAQ,CACNC,KAAM,UACNC,UATa,2BAUbC,WAAY,GACZC,KAAM,QACNC,IAAK1B,EACL2B,MAAO,UAIX,OADAC,QAAQC,IAAI,kBAAmBX,EAASY,KAAKC,OACtCb,EAASY,KAAKC,KAAK,ECJQC,GAC5B5B,EAAUa,EACZ,CAAE,MAAOgB,GACPL,QAAQtB,MAAM,yBAA0B2B,GACxC1B,EAAS0B,EAAIC,QACf,GAEFC,EAAY,GACX,IAEC7B,EAAc8B,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAAC,UAAQhC,KAGvD8B,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,MAAAD,SAAI,4BACe,IAAlBnC,EAAOqC,OACND,cAAA,OAAKF,UAAU,oBAAmBC,SAChCC,cAAA,KAAAD,SAAG,4BAGLC,cAAA,OAAKF,UAAU,aAAYC,SACxBnC,EAAOsC,KAAKC,GACXN,eAAA,OAA4BC,UAAU,aAAYC,SAAA,CAChDC,cAAA,OAAKF,UAAU,kBAAiBC,SAC9BC,cAAA,UACEI,MAAM,OACNC,OAAO,MACPC,IAAK,iCAAiCH,EAAMI,GAAGC,UAC/CC,MAAOxC,EAAmBkC,EAAMO,QAAQD,OACxCE,YAAY,IACZC,MAAM,2FACNC,iBAAe,MAGnBb,cAAA,MAAAD,SAAK9B,EAAmBkC,EAAMO,QAAQD,WAZ9BN,EAAMI,GAAGC,eAmB/B,ECtCeM,MAhBf,WACE,OACEjB,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBF,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACrBC,cAAA,OAAKF,UAAU,eAAcC,SAAC,oBAC9BC,cAAA,OAAKF,UAAU,eAAcC,SAC3BC,cAAA,KAAGe,KAAK,IAAIjB,UAAU,WAAUC,SAAC,cAGrCC,cAAA,QAAMF,UAAU,eAAcC,SAC5BC,cAACrC,EAAS,QAIlB,ECZAqD,IAASC,OACPjB,cAACkB,IAAMC,WAAU,CAAApB,SACfC,cAACc,EAAG,MAEN1C,SAASgD,eAAe,Q","file":"static/js/main.080a6375.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\r\nconst CHANNEL_ID = 'UCgJt5XKYzrqNVMm6QRHm4ZA';\r\n\r\nexport const fetchVideos = async () => {\r\n  if (!API_KEY) {\r\n    throw new Error('YouTube API key is not configured. Please set REACT_APP_YOUTUBE_API_KEY in your environment variables.');\r\n  }\r\n  const response = await axios.get('https://www.googleapis.com/youtube/v3/search', {\r\n    params: {\r\n      part: 'snippet',\r\n      channelId: CHANNEL_ID,\r\n      maxResults: 50,\r\n      type: 'video',\r\n      key: API_KEY,\r\n      order: 'date'\r\n    },\r\n  });\r\n  console.log('Fetched videos:', response.data.items); // Debug log\r\n  return response.data.items;\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { fetchVideos } from '../api/youtube';\r\n\r\nfunction VideoList() {\r\n  const [videos, setVideos] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const decodeHtmlEntities = (text) => {\r\n    const textarea = document.createElement('textarea');\r\n    textarea.innerHTML = text;\r\n    return textarea.value;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadVideos = async () => {\r\n      try {\r\n        const fetchedVideos = await fetchVideos();\r\n        setVideos(fetchedVideos);\r\n      } catch (err) {\r\n        console.error('Error fetching videos:', err);\r\n        setError(err.message);\r\n      }\r\n    };\r\n    loadVideos();\r\n  }, []);\r\n\r\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\r\n\r\n  return (\r\n    <div className=\"video-list\">\r\n      <h2>ProdByPrimeTime's Beats</h2>\r\n      {videos.length === 0 ? (\r\n        <div className=\"loading-container\">\r\n          <p>Loading your beats...</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"video-grid\">\r\n          {videos.map((video) => (\r\n            <div key={video.id.videoId} className=\"video-item\">\r\n              <div className=\"video-container\">\r\n                <iframe\r\n                  width=\"100%\"\r\n                  height=\"215\"\r\n                  src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n                  title={decodeHtmlEntities(video.snippet.title)}\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n              </div>\r\n              <h3>{decodeHtmlEntities(video.snippet.title)}</h3>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\nimport VideoList from './components/VideoList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-brand\">ProdByPrimeTime</div>\r\n        <div className=\"navbar-links\">\r\n          <a href=\"#\" className=\"nav-link\">Home</a>\r\n        </div>\r\n      </nav>\r\n      <main className=\"main-content\">\r\n        <VideoList />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'; // Optional: If you have a CSS file for styling\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}